

# Create a UDP socket and bind it to the IP address and port 3500
s = usocket.socket(usocket.AF_INET, usocket.SOCK_DGRAM)
s.bind((sockaddr, 3500))

# Example usage of the socket (not provided in the original code)
# You can use the socket 's' for sending and receiving data over UDP
# For example, sending data to IP address 10.10.10.10 on port 3500:
# s.sendto(b"Hello, server!", ("10.10.10.10", 3500))

s.sendto(b"Hello, server!", (sockaddr, 3500))

# Receive data from the server
while True:
    try:
        data, addr = s.recvfrom(1024)  # Receive data with a maximum size of 1024 bytes
        received_data = ujson.loads(data)  # Decode the received JSON data
        cyberpi.console.println("Received data from the server:")
        cyberpi.console.println(received_data)
        time.sleep(5)
        # Here you can further process the received data
        # For example: Perform actions based on the received data
    except OSError as e:
        # OSError is raised if no data has been received yet
        cyberpi.console.println("No data received yet")
        pass
    except Exception as e:
        # All other exceptions are handled here
        cyberpi.console.println("Error receiving data:", str(e))
        
    
